{"version":3,"file":"static/js/441.75d0d1c4.chunk.js","mappings":"0JAAO,IAyBMA,EAAoB,CAC/B,CACEC,MAAO,QACPC,SAAU,SAEZ,CACED,MAAO,aACPC,SAAU,eAEZ,CACED,MAAO,OACPC,SAAU,SAISC,KAAKC,UAAUJ,E,sJCxC/B,SAASK,EAAyBC,GACvC,MAA4BA,EAAYC,MAAM,KAA9C,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAOC,SAASH,GAChBI,EAAQD,SAASF,GACjBI,EAA0B,IAAVD,EAAc,GAAKA,EAAQ,EAE3CE,EAAsB,KAAVF,EAAe,EAAIA,EAAQ,EACvCG,EAAqB,KAAVH,EAAeF,EAAO,EAAIA,EAC3C,MAAO,CACLG,cAAc,GAAD,OAJgB,IAAVD,EAAcF,EAAO,EAAIA,EAI/B,YAAqBG,EAC/BG,WACAC,SAAS,EAAG,MACfH,UAAU,GAAD,OAAKC,EAAL,YAAiBD,EAAUE,WAAWC,SAAS,EAAG,MAE9D,CC4GM,SAASC,EAA0BC,GAaxC,IAZA,IAAMC,EAAO,IAAIC,KAAKF,GAChBT,EAAOU,EAAKE,cACZV,EAAQQ,EAAKG,WACbC,EAAW,IAAIH,KAAKX,EAAME,EAAO,GACjCa,EAAU,IAAIJ,KAAKX,EAAME,EAAQ,EAAG,GACpCc,EAAcD,EAAQE,UACtBC,GAAgBJ,EAASK,SAAW,GAAK,EACzCC,EAAQ,GACVC,EAAc,GAGZC,EAAmB,IAAIX,KAAKX,EAAME,EAAO,GAAGe,UACzCM,EAAIL,EAAe,EAAGK,GAAK,EAAGA,IACrCF,EAAYG,KAAK,CAACC,IAAKH,EAAmBC,EAAGrB,MAAOP,EAAyBc,GAAYN,gBAG3F,IAAK,IAAIoB,EAAI,EAAGA,GAAKP,EAAaO,IACL,IAAvBF,EAAYK,SACdN,EAAMI,KAAKH,GACXA,EAAc,IAEhBA,EAAYG,KAAK,CAACC,IAAIF,EAAGrB,MAAOO,EAAWkB,MAAM,EAAE,KAIrD,IADA,IAAMC,GAAeb,EAAQI,SAAW,GAAK,EACpCI,EAAI,EAAGA,GAAK,EAAIK,EAAc,EAAGL,IACxCF,EAAYG,KAAK,CAACC,IAAIF,EAAGrB,MAAOP,EAAyBc,GAAYL,YAGvE,OADAgB,EAAMI,KAAKH,GACJD,CACR,CCzJM,SAASS,EAAuBpB,GACrC,IAAIC,EAAO,IAAIC,KAAKF,GAChBqB,EAAc,IAAInB,KAAKD,EAAKqB,UAAY,OACxCC,EAAU,IAAIrB,KAAKD,EAAKqB,UAAY,OACxC,MAAO,CACLD,YAAaA,EAAYG,cAAcN,MAAM,EAAG,IAChDK,QAASA,EAAQC,cAAcN,MAAM,EAAG,IAE3C,CCLM,IAaMO,EAAmB,SAAAzB,GAC9B,IAAMC,EAAO,IAAIC,KAAKF,GAChBK,EAAW,IAAIH,KAAKD,GACpBK,EAAU,IAAIJ,KAAKD,GACnBQ,GAAgBJ,EAASK,SAAW,GAAK,EACzCS,GAAeb,EAAQI,SAAW,GAAK,EAC7CL,EAASqB,QAAQrB,EAASG,UAAYC,GACtCH,EAAQoB,QAAQpB,EAAQE,UAAY,EAAIW,EAAc,GAEtD,IADA,IAAMQ,EAAY,GACTC,EAAI,IAAI1B,KAAKG,GAAWuB,GAAKtB,EAASsB,EAAEF,QAAQE,EAAEpB,UAAY,GACrEmB,EAAUZ,KAAKa,EAAEpB,WAEnB,OAAOmB,CACR,C,+NC3BD,IAAIE,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAK1B,SAAW2B,EAAK3B,OACzD,OAAO,EAMT,IAFA,IAAIA,EAAS0B,EAAK1B,OAETH,EAAI,EAAGA,EAAIG,EAAQH,IAC1B,IAAKuB,EAAcM,EAAK7B,GAAI8B,EAAK9B,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkB+B,CAAyBR,GACtCS,EAAoB,IAAZN,EA/Gd,SAA8BO,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRtB,CACR,EACDuB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBd,GAtFnD,SAAwBF,EAASO,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOtB,CACR,CAwBD,MAAO,CACLoB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASrB,IAEf4B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQxC,OAASuB,GACnBiB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAevB,EAASE,GAEvF,SAASsB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUtB,EAAW,CAIvB,GAFAsB,EAAQjB,EAAKgC,MAAM,KAAMD,WAErBxB,EAAqB,CACvB,IAAIgB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOP,EAAoBO,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC1F,IAAEI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASU,EAAsBC,GACpC,IAAK,IAAIC,EAAOnB,UAAUhD,OAAQoE,EAAyB,IAAIZ,MAAMW,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKrB,UAAUqB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQvB,UAAUhD,OAAQsD,EAAQ,IAAIE,MAAMe,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFlB,EAAMkB,GAASxB,UAAUwB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBtC,GAGduC,EAAavB,EAAMT,MAQvB,GAN0B,kBAAfgC,IACTF,EAAwBE,EAExBA,EAAavB,EAAMT,OAGK,oBAAfgC,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBxB,MAAMC,QAAQmB,GAAkBA,EAAiB,CAACA,GACxErB,EAAeF,EAAgBC,GAC/B2B,EAAqBf,EAAQjB,WAAM,EAAQ,CAAC,WAG9C,OAFAyB,IAEOG,EAAW5B,MAAM,KAAMD,UAC/B,GAAEkC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTpF,EAASuD,EAAavD,OAEjBH,EAAI,EAAGA,EAAIG,EAAQH,IAG1BuF,EAAOtF,KAAKyD,EAAa1D,GAAGoD,MAAM,KAAMD,YAK1C,OADAyB,EAAcQ,EAAmBhC,MAAM,KAAMmC,EAE9C,IAeD,OAdAC,OAAOC,OAAOH,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpB1B,aAAcA,EACdgC,WAAY,WACV,OAAOd,CACR,EACDe,eAAgB,WACd,OAAOd,CACR,EACDe,oBAAqB,WACnB,OAAOf,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,IAAIA,EAAgCL,EAAsBjD,GCrGpD0E,EAAoB,SAAAC,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,aAAX,aAAI,EAAcC,WAAlB,EACzBC,EAAqB,SAAAH,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,aAAX,aAAI,EAAcG,YAAlB,EAC1BC,EAAwB,SAAAL,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,aAAX,aAAI,EAAcK,eAAlB,EAC7BC,EAA6B,SAAAP,GAAK,oBAC7CA,QAD6C,IAC7CA,GAD6C,UAC7CA,EAAOC,aADsC,aAC7C,EAAcO,oBAD+B,EAElCC,EAAmB,SAAAT,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,aAAX,aAAI,EAAcS,UAAlB,EAExBC,EAAoB,SAAAX,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,aAAX,aAAI,EAAcW,WAAlB,EAEzBC,EAAuB,SAAAb,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,aAAX,aAAI,EAAca,SAAlB,EAC5BC,EAAoB,SAAAf,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,aAAX,aAAI,EAAce,WAAlB,EAKhCC,GADO,IAAI3H,MACQsB,cAAcN,MAAM,EAAG,IAEPqE,GANF,SAAAqB,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,aAAX,aAAI,EAAciB,iBAAlB,IAQ1C,SAAAA,GAME,OALmBA,EAAkBC,QAAO,SAAAC,GAG1C,OAFiB,IAAI9H,KAAK8H,EAAK/H,MACFuB,cAAcN,MAAM,EAAG,MAC7B2G,CACxB,GAEF,G,uDC5BH,ICGII,EDFJ,GACEC,WAFmC,qBAAXC,QAA0BA,OAAOD,YAAcC,OAAOD,WAAWE,KAAKD,SCI1FE,EAAQ,IAAIC,WAAW,IACd,SAASC,IAEtB,IAAKN,KAEHA,EAAoC,qBAAXE,QAA0BA,OAAOF,iBAAmBE,OAAOF,gBAAgBG,KAAKD,SAGvG,MAAM,IAAIlD,MAAM,4GAIpB,OAAOgD,EAAgBI,EACxB,CCTD,IAFA,IAAMG,EAAY,GAET1H,EAAI,EAAGA,EAAI,MAAOA,EACzB0H,EAAUzH,MAAMD,EAAI,KAAOjB,SAAS,IAAIqB,MAAM,IAGzC,SAASuH,EAAgBC,GAAiB,IAAZC,EAAY,uDAAH,EAG5C,OAAQH,EAAUE,EAAIC,EAAS,IAAMH,EAAUE,EAAIC,EAAS,IAAMH,EAAUE,EAAIC,EAAS,IAAMH,EAAUE,EAAIC,EAAS,IAAM,IAAMH,EAAUE,EAAIC,EAAS,IAAMH,EAAUE,EAAIC,EAAS,IAAM,IAAMH,EAAUE,EAAIC,EAAS,IAAMH,EAAUE,EAAIC,EAAS,IAAM,IAAMH,EAAUE,EAAIC,EAAS,IAAMH,EAAUE,EAAIC,EAAS,IAAM,IAAMH,EAAUE,EAAIC,EAAS,KAAOH,EAAUE,EAAIC,EAAS,KAAOH,EAAUE,EAAIC,EAAS,KAAOH,EAAUE,EAAIC,EAAS,KAAOH,EAAUE,EAAIC,EAAS,KAAOH,EAAUE,EAAIC,EAAS,MAAMC,aACtf,CCYD,MAxBA,SAAYC,EAASC,EAAKH,GACxB,GAAII,EAAAA,aAAsBD,IAAQD,EAChC,OAAOE,EAAAA,aAIT,IAAMC,GADNH,EAAUA,GAAW,CAAC,GACDI,SAAWJ,EAAQN,KAAOA,KAK/C,GAHAS,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBF,EAAK,CACPH,EAASA,GAAU,EAEnB,IAAK,IAAI7H,EAAI,EAAGA,EAAI,KAAMA,EACxBgI,EAAIH,EAAS7H,GAAKkI,EAAKlI,GAGzB,OAAOgI,CACR,CAED,OAAOL,EAAgBO,EACxB,C","sources":["helpers/calendar/calendarArrays.js","helpers/calendar/getPreviousAndNextMonths.js","helpers/calendar/getCalendarCellsStructure.js","helpers/calendar/getPreviousAndNextDays.js","helpers/calendar/getWeekDaysArray.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/tasks/selectors.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["export const monthNamesArray = [\n  'JANUARY',\n  'FEBRUARY',\n  'MARCH',\n  'APRIL',\n  'MAY',\n  'JUNE',\n  'JULY',\n  'AUGUST',\n  'SEPTEMBER',\n  'OCTOBER',\n  'NOVEMBER',\n  'DECEMBER',\n];\n\nexport const dayNamesArray = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\n\nexport const choosedDayColumns = [\n  {\n    title: 'To do',\n    category: 'to-do',\n  },\n  {\n    title: 'In progres',\n    category: 'in-progress',\n  },\n  {\n    title: 'Done',\n    category: 'done',\n  },\n];\n\nexport const columns = JSON.stringify(choosedDayColumns);\n","export function getPreviousAndNextMonths(monthString) {\n  const [yearStr, monthStr] = monthString.split('-');\n  const year = parseInt(yearStr);\n  const month = parseInt(monthStr);\n  const previousMonth = month === 1 ? 12 : month - 1;\n  const previousYear = month === 1 ? year - 1 : year;\n  const nextMonth = month === 12 ? 1 : month + 1;\n  const nextYear = month === 12 ? year + 1 : year;\n  return {\n    previousMonth: `${previousYear}-${previousMonth\n      .toString()\n      .padStart(2, '0')}`,\n    nextMonth: `${nextYear}-${nextMonth.toString().padStart(2, '0')}`,\n  };\n}\n","import { getPreviousAndNextMonths } from \"./getPreviousAndNextMonths\";\n\nexport const getCalendarCellsStructuree = settesDate => {\n    const year = settesDate.slice(0, 4);\n    const month = settesDate.slice(5, 7);\n    const numberOffirstWeek = getWeekNumberr(\n      parseInt(year, 10),\n      parseInt(month, 10),\n      1\n    );\n    const lastDay = new Date(year, month, 0).getDate();\n    const numberOfLastWeek = getWeekNumberr(\n      parseInt(year, 10),\n      parseInt(month, 10),\n      lastDay\n    );\n    const getWeekNumbersArray = () => {\n      let array = [];\n      let weekNumber = numberOffirstWeek;\n      do {\n        array.push(weekNumber);\n        weekNumber += 1;\n      } while (weekNumber <= numberOfLastWeek);\n      return array;\n    };\n    const weekNumbersArray = getWeekNumbersArray();\n    const daysArray = weekNumbersArray.map(week => {\n      return getWeekDates(parseInt(year, 10), parseInt(week, 10));\n    });\n    return daysArray;\n  };\n\nfunction getWeekNumberr(year, month, day) {\n    let date = new Date(year, month - 1, day);\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() + 4 - (date.getDay() || 7));\n    let yearStart = new Date(date.getFullYear(), 0, 1);\n    let weekNo = Math.ceil(((date - yearStart) / 86400000 + 1) / 7);\n  \n    return weekNo;\n};\n\nfunction getWeekDates(year, weekNumber) {\n    var firstDayOfYear = new Date(year, 0, 1);\n    var daysToFirstMonday = (8 - firstDayOfYear.getDay()) % 7;\n    var firstMondayOfYear = new Date(year, 0, 1 + daysToFirstMonday);\n    var firstDayOfWeek = new Date(firstMondayOfYear.getTime() + (weekNumber - 1) * 7 * 86400000);\n    var weekDates = [];\n    for (var i = 0; i < 7; i++) {\n      var date = new Date(firstDayOfWeek.getTime() + i * 86400000);\n      if (date.getMonth() === 11 && date.getDate() > 25) {\n        break;\n      }\n      weekDates.push(date.getDate());\n    }\n    return weekDates;\n};\n\nexport function getCalendarCellsStructureee(dateString) {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDayOfMonth = new Date(year, month, 1).getDay();\n  const lastDayOfMonth = new Date(year, month + 1, 0).getDate();\n  const monthArray = [];\n  let week = [];\n  let prevMonthDays = new Date(year, month, 0).getDate();\n  let nextMonthDays = 1;\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    week.push(prevMonthDays);\n    prevMonthDays--;\n  }\n  for (let i = 1; i <= lastDayOfMonth; i++) {\n    week.push(i);\n    if (week.length === 7) {\n      monthArray.push(week);\n      week = [];\n    }\n  }\n  if (week.length > 0) {\n    for (let i = week.length; i < 7; i++) {\n      week.push(nextMonthDays);\n      nextMonthDays++;\n    }\n    monthArray.push(week);\n  }\n  return monthArray;\n}\n\nexport function ggetCalendarCellsStructure(dateString) {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDay = new Date(year, month, 1);\n  const lastDay = new Date(year, month + 1, 0);\n  const daysInMonth = lastDay.getDate();\n  const firstWeekDay = (firstDay.getDay() + 6) % 7; // adjust to start with Monday\n  const weeks = [];\n  let currentWeek = [];\n  //let day = 1;\n  // add days of previous month\n  const prevMonthLastDay = new Date(year, month, 0).getDate();\n  for (let i = firstWeekDay - 1; i >= 0; i--) {\n    currentWeek.push(prevMonthLastDay - i);\n  }\n  // add days of current month\n  for (let i = 1; i <= daysInMonth; i++) {\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek);\n      currentWeek = [];\n    }\n    currentWeek.push(i);\n  }\n  // add days of next month\n  const lastWeekDay = (lastDay.getDay() + 6) % 7; // adjust to end with Sunday\n  for (let i = 1; i <= 7 - lastWeekDay - 1; i++) {\n    currentWeek.push(i);\n  }\n  weeks.push(currentWeek);\n  return weeks;\n}\n\nexport function getCalendarCellsStructure(dateString) {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDay = new Date(year, month, 1);\n  const lastDay = new Date(year, month + 1, 0);\n  const daysInMonth = lastDay.getDate();\n  const firstWeekDay = (firstDay.getDay() + 6) % 7; // adjust to start with Monday\n  const weeks = [];\n  let currentWeek = [];\n  //let day = 1;\n  // add days of previous month\n  const prevMonthLastDay = new Date(year, month, 0).getDate();\n  for (let i = firstWeekDay - 1; i >= 0; i--) {\n    currentWeek.push({day: prevMonthLastDay - i, month: getPreviousAndNextMonths(dateString).previousMonth});\n  }\n  // add days of current month\n  for (let i = 1; i <= daysInMonth; i++) {\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek);\n      currentWeek = [];\n    }\n    currentWeek.push({day:i, month: dateString.slice(0,7)});\n  }\n  // add days of next month\n  const lastWeekDay = (lastDay.getDay() + 6) % 7; // adjust to end with Sunday\n  for (let i = 1; i <= 7 - lastWeekDay - 1; i++) {\n    currentWeek.push({day:i, month: getPreviousAndNextMonths(dateString).nextMonth});\n  }\n  weeks.push(currentWeek);\n  return weeks;\n}\n","export function getPreviousAndNextDays(dateString) {\n  var date = new Date(dateString);\n  var previousDay = new Date(date.getTime() - 86400000);\n  var nextDay = new Date(date.getTime() + 86400000);\n  return {\n    previousDay: previousDay.toISOString().slice(0, 10),\n    nextDay: nextDay.toISOString().slice(0, 10),\n  };\n}\n","import { getWeekDates } from './getWeekDates';\nimport { getWeekNumber } from './getWeekNumber';\n\nexport const getWeekDaysArrayy = date => {\n  const year = date.slice(0, 4);\n  const month = date.slice(5, 7);\n  const day = date.slice(8, 10);\n  const week = getWeekNumber(\n    parseInt(year, 10),\n    parseInt(month, 10),\n    parseInt(day, 10)\n  );\n  const array = getWeekDates(parseInt(year, 10), parseInt(week, 10));\n  return array;\n};\n\nexport const getWeekDaysArray = dateString => {\n  const date = new Date(dateString);\n  const firstDay = new Date(date);\n  const lastDay = new Date(date);\n  const firstWeekDay = (firstDay.getDay() + 6) % 7;\n  const lastWeekDay = (lastDay.getDay() + 6) % 7;\n  firstDay.setDate(firstDay.getDate() - firstWeekDay);\n  lastDay.setDate(lastDay.getDate() + 7 - lastWeekDay - 1);\n  const weekArray = [];\n  for (let d = new Date(firstDay); d <= lastDay; d.setDate(d.getDate() + 1)) {\n    weekArray.push(d.getDate());\n  }\n  return weekArray;\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectChoosedDate = state => state?.tasks?.choosedDate;\nexport const selectCalendarType = state => state?.tasks?.calendarType;\nexport const selectIsTaskModalOpen = state => state?.tasks?.isTaskModalOpen;\nexport const selectIsCurrentTaskEditing = state =>\n  state?.tasks?.isCurrentTaskEditing;\nexport const selectMonthTasks = state => state?.tasks?.monthTasks;\nexport const selectIsCurrentDateBusy = state => state?.tasks?.isCurrentDateBusy;\nexport const selectCurrentTask = state => state?.tasks?.currentTask;\nexport const selectErrorTasks = state => state?.tasks?.error;\nexport const selectIsLoadingTasks = state => state?.tasks?.isLoading;\nexport const selectIsTodayBusy = state => state?.tasks?.isTodayBusy;\nexport const selectTasksCurrentMonth = state => state?.tasks?.tasksCurrentMonth;\nexport const selectAllTasks = state => state?.tasks?.allTasks;\n\nconst date = new Date();\nconst currentDate = date.toISOString().slice(0, 10);\n\nexport const selectTasksForCurrentDate = createSelector(\n  selectTasksCurrentMonth,\n  tasksCurrentMonth => {\n    let currentTasks = tasksCurrentMonth.filter(task => {\n      const taskDate = new Date(task.date);\n      const taskDateStr = taskDate.toISOString().slice(0, 10);\n      return taskDateStr === currentDate;\n    });\n    return currentTasks;\n  }\n);\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["choosedDayColumns","title","category","JSON","stringify","getPreviousAndNextMonths","monthString","split","yearStr","monthStr","year","parseInt","month","previousMonth","nextMonth","nextYear","toString","padStart","getCalendarCellsStructure","dateString","date","Date","getFullYear","getMonth","firstDay","lastDay","daysInMonth","getDate","firstWeekDay","getDay","weeks","currentWeek","prevMonthLastDay","i","push","day","length","slice","lastWeekDay","getPreviousAndNextDays","previousDay","getTime","nextDay","toISOString","getWeekDaysArray","setDate","weekArray","d","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","selectChoosedDate","state","tasks","choosedDate","selectCalendarType","calendarType","selectIsTaskModalOpen","isTaskModalOpen","selectIsCurrentTaskEditing","isCurrentTaskEditing","selectMonthTasks","monthTasks","selectCurrentTask","currentTask","selectIsLoadingTasks","isLoading","selectIsTodayBusy","isTodayBusy","currentDate","tasksCurrentMonth","filter","task","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","byteToHex","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}