{"version":3,"file":"static/js/883.bfacaae8.chunk.js","mappings":"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","sources":["components/User/MainLayout/Calendar/ChoosedMonth/CalendarTableOneDay/CalendarTableOneDay.styled.js","components/User/MainLayout/Calendar/ChoosedMonth/CalendarTableOneDay/CalendarTableOneDay.jsx","components/User/MainLayout/Calendar/ChoosedMonth/CalendarTable/CalendarTable.styled.js","components/User/MainLayout/Calendar/ChoosedMonth/CalendarTable/CalendarTable.jsx","components/User/MainLayout/Calendar/ChoosedMonth/ChoosedMonth.styled.js","components/User/MainLayout/Calendar/ChoosedMonth/ChoosedMonth.jsx","components/User/MainLayout/Calendar/ChoosedMonth/MonthCalendarHead/MonthCalendarHead.styled.js","components/User/MainLayout/Calendar/ChoosedMonth/MonthCalendarHead/MonthCalendarHead.jsx","styles/mediaVeriables.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { device } from 'styles/mediaVeriables';\n\nexport const DayContainer = styled.div`\n  width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.borderTableAndInput};\n  position: relative;\n  min-height: 94px;\n  background-color: ${({ theme }) => theme.colors.backgroundUserForm};\n  border-radius: 8px;\n  @media ${device.tablet} {\n    min-height: 144px;\n  }\n\n  @media ${device.desktop} {\n    min-height: 125px;\n  }\n`;\n\nexport const NumberContainer = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 4px;\n  background-color: ${({ picked, theme }) =>\n    picked ? theme.colors.accent : 'transparent'};\n  border-radius: 8px;\n  padding: 4px 8px;\n\n  @media ${device.tablet} {\n    top: 18px;\n    right: 22px;\n  }\n\n  @media ${device.desktop} {\n    top: 14px;\n    right: 14px;\n  }\n`;\n\nexport const Number = styled.p`\n  font-family: 'Inter';\n  font-weight: ${({ theme }) => theme.fontWeight.b};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: ${({ picked, theme }) =>\n    picked ? theme.colors.white : theme.colors.loaderWrapper};\n\n  @media ${device.tablet} {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n  }\n\n  @media ${device.desktop} {\n    font-size: ${({ theme }) => theme.fontSizes.m};\n    line-height: 1.1;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const OverflowContainer = styled.div`\n  width: 100%;\n  height: 72px;\n  position: absolute;\n  top: 48px;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    width: 0;\n  }\n  -ms-overflow-style: none;\n  overflow: -moz-scrollbars-none;\n  @media ${device.tablet} {\n    height: 100px;\n    top: 58px;\n  }\n\n  @media ${device.desktop} {\n    height: 67px;\n  }\n`;\n\nexport const TasksContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\nexport const TaskButton = styled.button`\n  margin: 2px;\n  height: 22px;\n  padding: 4px 4px 4px 8px;\n  display: flex;\n  font-weight: ${({ theme }) => theme.fontWeight.b};\n  font-size: ${({ theme }) => theme.fontSizes.micro};\n  line-height: 1.4;\n  text-align: start;\n  border-radius: 8px;\n  background-color: ${({ priority, theme }) => {\n    switch (priority) {\n      case 'low':\n        return theme.colors.blueInNotes;\n      case 'medium':\n        return theme.colors.yellowInNotes;\n      case 'high':\n        return theme.colors.pinkInNotes;\n      default:\n        return theme.colors.blueInNotes;\n    }\n  }};\n  //overflow: hidden;\n  ::-webkit-scrollbar {\n    width: 0;\n  }\n  color: ${({ priority, theme }) => {\n    switch (priority) {\n      case 'low':\n        return theme.colors.lowTask;\n      case 'medium':\n        return theme.colors.mediumTask;\n      case 'high':\n        return theme.colors.highTask;\n      default:\n        return theme.colors.lowTask;\n    }\n  }};\n  @media ${device.tablet} {\n    margin-left: 4px;\n    margin-right: 4px;\n  }\n\n  @media ${device.desktop} {\n    margin-left: 8px;\n    margin-right: 8px;\n  }\n  transform: scale(1);\n  transition: ease-in-out 0.7s;\n  transition-property: scale;\n  transition-duration: ${({ theme }) => theme.animations.duration};\n  transition-timing-function: ${({ theme }) => theme.animations.cubicBezier};\n\n  :hover,\n  &:focus {\n    scale: 1.1;\n  }\n\n  ${({ category }) => {\n    if (category === 'done') {\n      return 'text-decoration: line-through; text-decoration-color: black;';\n    }\n  }}\n`;\n\nexport const ButtonTextContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n  height: 100%;\n`;\n\nexport const ButtonText = styled.p`\n  white-space: nowrap;\n`;\n\nexport const ButtonDots = styled.div`\n  display: ${({ length }) => {\n    if (length < 6) {\n      return 'none';\n    }\n    return 'block';\n  }};\n\n  @media ${device.tablet} {\n    display: ${({ length }) => {\n      if (length < 10) {\n        return 'none';\n      }\n      return 'block';\n    }};\n  }\n\n  @media ${device.desktop} {\n    display: ${({ length }) => {\n      if (length < 18) {\n        return 'none';\n      }\n      return 'block';\n    }};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectChoosedDate, selectMonthTasks } from 'redux/tasks/selectors';\nimport {\n  setCalendarType,\n  setChoosedDate,\n  setCurrentTask,\n  setIsCurrentTaskEditing,\n  setIsTaskModalOpen,\n} from 'redux/tasks/slice';\nimport {\n  ButtonText,\n  ButtonDots,\n  ButtonTextContainer,\n  DayContainer,\n  Number,\n  NumberContainer,\n  StyledLink,\n  TaskButton,\n  TasksContainer,\n  OverflowContainer,\n} from './CalendarTableOneDay.styled';\n\nexport const CalendarTableOneDay = ({ date, picked = false, month }) => {\n  const dispatch = useDispatch();\n\n  const fullDate = useSelector(selectChoosedDate);\n  const dateOfBox = `${month}-${date.toString().padStart(2, 0)}`;\n\n  const monthTasks = useSelector(selectMonthTasks);\n  const tasksForThisDate = monthTasks?.filter(\n    task =>\n      task.date.slice(0, 10) ===\n      `${fullDate.slice(0, 8)}${date.toString().padStart(2, 0)}`\n  );\n  const tasksForThisDateDependthOnMonth = tasksForThisDate.filter(\n    task => task.date.slice(0, 7) === month\n  );\n  const onClickTask = (e, task) => {\n    e.stopPropagation();\n    e.preventDefault();\n    dispatch(setIsCurrentTaskEditing(true));\n    dispatch(setCurrentTask(task));\n    dispatch(setIsTaskModalOpen(true));\n  };\n\n  const onClickDate = () => {\n    dispatch(setChoosedDate(dateOfBox));\n    dispatch(setCalendarType('day'));\n  };\n\n  return (\n    <StyledLink onClick={onClickDate} to={`/calendar/day/${dateOfBox}`}>\n      <DayContainer>\n        <NumberContainer picked={picked}>\n          <Number picked={picked}>{date}</Number>\n        </NumberContainer>\n\n        <OverflowContainer>\n          <TasksContainer>\n            {tasksForThisDateDependthOnMonth?.map(task => (\n              <TaskButton\n                key={task._id}\n                priority={task.priority}\n                category={task.category}\n                onClick={e => onClickTask(e, task)}\n              >\n                <ButtonTextContainer>\n                  <ButtonText>{task.title}</ButtonText>\n                </ButtonTextContainer>\n\n                <ButtonDots length={task.title.length}>...</ButtonDots>\n              </TaskButton>\n            ))}\n          </TasksContainer>\n        </OverflowContainer>\n      </DayContainer>\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { device } from 'styles/mediaVeriables';\n\nexport const CalendarTableContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: flex-start;\n  @media ${device.desktopBefore} {\n    padding-bottom: 32px;\n  }\n`;\n\nexport const Week = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n`;\n","import { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { selectChoosedDate } from 'redux/tasks/selectors';\nimport { getCalendarCellsStructure } from 'helpers/calendar';\nimport { CalendarTableOneDay } from '../CalendarTableOneDay/CalendarTableOneDay';\nimport { CalendarTableContainer, Week } from './CalendarTable.styled';\n\nexport const CalendarTable = () => {\n  const date = useSelector(selectChoosedDate);\n  const calendarCells = getCalendarCellsStructure(date);\n\n  return (\n    <CalendarTableContainer>\n      {calendarCells.map(week => (\n        <Week key={uuidv4()}>\n          {week.map(day => (\n            <CalendarTableOneDay\n              key={uuidv4()}\n              date={day.day}\n              month={day.month}\n              picked={\n                day.day === parseInt(date.slice(8, 10), 10) &&\n                day.month === date.slice(0, 7)\n              }\n            />\n          ))}\n        </Week>\n      ))}\n    </CalendarTableContainer>\n  );\n};\n","const { default: styled } = require('@emotion/styled');\n\nexport const MonthCalendarContainer = styled.div`\n  width: 100%;\n  /* height: 100%; */\n  /* \n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n        width: 335px;\n        height: 535px;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 704px;\n        height: 785px;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        width: 1084px;\n        height: 686px;\n    } */\n`;\n","import { CalendarTable } from './CalendarTable';\nimport { MonthCalendarHead } from './MonthCalendarHead';\nimport { MonthCalendarContainer } from './ChoosedMonth.styled';\n\nexport const ChoosedMonth = () => {\n\n  return (\n    <MonthCalendarContainer>\n      <MonthCalendarHead />\n      <CalendarTable />\n    </MonthCalendarContainer>\n  );\n};\n\nexport default ChoosedMonth;\n","import styled from '@emotion/styled';\nimport { device } from 'styles/mediaVeriables';\n\nexport const ListDay = styled.ul`\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => theme.colors.borderTableAndInput};\n  background-color: ${({ theme }) => theme.colors.backgroundUserForm};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin-bottom: 14px;\n  @media ${device.tablet} {\n    margin-bottom: 18px;\n  }\n  @media ${device.desktop} {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ItemDay = styled.li`\n  overflow: hidden;\n  text-transform: uppercase;\n\n  @media ${device.tabletBefore} {\n    width: 10px;\n\n    width: ${({ day }) => {\n      switch (day) {\n        case 'ПН':\n          return '12px';\n        case 'ВТ':\n          return '10px';\n        case 'СР':\n          return '12px';\n        case 'ЧТ':\n          return '12px';\n        case 'ПТ':\n          return '13px';\n        case 'СБ':\n          return '12px';\n        case 'НД':\n          return '12px';\n        case 'Mon':\n          return '15px';\n        case 'Tue':\n          return '10px';\n        case 'Wed':\n          return '16px';\n        case 'Thu':\n          return '11px';\n        case 'Fri':\n          return '10px';\n        case 'Sat':\n          return '10px';\n        case 'Sun':\n          return '10px';\n        default:\n          return '10px';\n      }\n    }};\n  }\n`;\n\nexport const DayBtn = styled.button`\n  font-weight: ${({ theme }) => theme.fontWeight.sb};\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  line-height: 1.1;\n  text-transform: uppercase;\n  padding: 16px 0px;\n  border: none;\n  background-color: transparent;\n  color: ${({ id, theme }) => {\n    switch (id) {\n      case 'Saturday':\n        return theme.colors.accent;\n      case 'СБ':\n        return theme.colors.accent;\n      case 'Sunday' || 'НД':\n        return theme.colors.hovered;\n      case 'НД':\n        return theme.colors.hovered;\n      default:\n        return theme.colors.loaderWrapper;\n    }\n  }};\n\n  @media ${device.tablet} {\n    padding: 14px 0px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { ListDay, DayBtn, ItemDay } from './MonthCalendarHead.styled';\n\nexport const MonthCalendarHead = () => {\n  const { t } = useTranslation();\n  const daysString = t(`calendarNames.days`);\n  const daysArray = daysString.split(',');\n\n  return (\n    <ListDay>\n      {daysArray.map((day, i) => (\n        <ItemDay key={i} day={day.slice(0, 3)}>\n          <DayBtn id={day}>{day.slice(0, 3)}</DayBtn>\n        </ItemDay>\n      ))}\n    </ListDay>\n  );\n};\n","const size = {\n  mobile: 375,\n  tablet: 768,\n  desktop: 1440,\n};\n\nexport const device = {\n  mobileOnly: `(max-width: ${size.mobile - 0.02}px)`,\n  mobile: `(min-width: ${size.mobile}px)`,\n  mobileTablet: `(min-width: ${size.mobile}px) and (max-width: ${\n    size.tablet - 0.02\n  }px)`,\n  tabletBefore: `(max-width: ${size.tablet - 0.02}px)`,\n  tablet: `(min-width: ${size.tablet}px)`,\n  tabletOnly: `(min-width: ${size.tablet}px) and (max-width: ${\n    size.desktop - 0.02\n  }px)`,\n  desktopBefore: `(max-width: ${size.desktop - 0.02}px)`,\n  desktop: `(min-width: ${size.desktop}px)`,\n  retina: `(min-device-pixel-ratio: 2),\n  (-webkit-min-device-pixel-ratio: 2),\n  (min-resolution: 192dpi),\n  (min-resolution: 2dppx)`,\n};\n"],"names":["DayContainer","styled","theme","colors","borderTableAndInput","backgroundUserForm","device","NumberContainer","picked","accent","Number","fontWeight","b","fontSizes","xs","white","loaderWrapper","l","m","StyledLink","Link","OverflowContainer","TasksContainer","TaskButton","micro","priority","blueInNotes","yellowInNotes","pinkInNotes","lowTask","mediumTask","highTask","animations","duration","cubicBezier","category","ButtonTextContainer","ButtonText","ButtonDots","length","CalendarTableOneDay","date","month","dispatch","useDispatch","fullDate","useSelector","selectChoosedDate","dateOfBox","toString","padStart","monthTasks","selectMonthTasks","tasksForThisDateDependthOnMonth","filter","task","slice","onClick","setChoosedDate","setCalendarType","to","map","e","stopPropagation","preventDefault","setIsCurrentTaskEditing","setCurrentTask","setIsTaskModalOpen","onClickTask","title","_id","CalendarTableContainer","Week","CalendarTable","calendarCells","getCalendarCellsStructure","week","day","parseInt","uuidv4","MonthCalendarContainer","require","default","div","breakpoints","s","ChoosedMonth","MonthCalendarHead","ListDay","ItemDay","DayBtn","sb","id","hovered","daysArray","t","useTranslation","split","i","size","mobileOnly","mobile","mobileTablet","tabletBefore","tablet","tabletOnly","desktopBefore","desktop","retina"],"sourceRoot":""}